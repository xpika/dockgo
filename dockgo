function getPort(){                                                                                                                                                                           
  export CHECK="do while";                                                                                                                                                                    
  while [[ ! -z $CHECK ]]; do
    PORT=$(( ( RANDOM % 60000 )  + 1025 ))                                                                                                                                                    
    CHECK=$(sudo netstat -ap | grep $PORT)                                                                                                                                                    
  done                                                                                                                                                                                        
  echo $PORT                                                                                                                                                                                  
}

dockclean(){
    docker rm -v $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
    docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
}

alias dockbuild='docker build -t "${PWD##*/}" .'
alias dockfreshbuild='docker build -t --no-cache "${PWD##*/}" .'
alias dockrm='docker rm -f "${PWD##*/}"'
alias dockrun='docker run $([ -d /root/workdir ] && echo -v /root/workdir:/root/workdir) -p $( [ -e fromport ] && cat fromport || getPort ):$( [ -e toport ] && cat toport || echo 80 ) -i -d -t -e "DISPLAY=unix:0.0" -v="/tmp/.X11-unix:/tmp/.X11-unix:rw" --privileged=true --name "${PWD##*/}"  "${PWD##*/}"'
alias dockattach='docker attach "${PWD##*/}"'
alias dockstop='docker stop "${PWD##*/}"'         
alias dockstart='docker start "${PWD##*/}"'
alias dockgo='dockbuild ; dockrun ; dockenter'
alias dockstart_r='ssh $TARGET_MACHINE "docker start \"${PWD##*/}\""'

alias dockmo='dockrm ; dockgo'
alias dockenter='docker exec -i -t "${PWD##*/}" script --force -c /bin/bash' 
alias dockwork='docker exec -i -t "${PWD##*/}" script --force -c "  cd /root/workdir ; /bin/bash  " '
alias dockmux='docker exec -i -t "${PWD##*/}" script --force -c bash -c "tmux attach"'
alias dockcommit='docker commit "${PWD##*/}" "${PWD##*/}"'
alias dockhiber='dockstop;dockcommit && dockrm'
alias dockip='docker inspect --format "{{ .NetworkSettings.Networks.bridge.IPAddress }}"  "${PWD##*/}"'
alias dockid='docker inspect --format {{.Id}} "${PWD##*/}" '
alias dockmid='cat /var/lib/docker/image/aufs/layerdb/mounts/`dockid`/mount-id'
alias dockdir='echo /var/lib/docker/aufs/diff/`dockmid`'
alias dockln='ln -s `dockdir` mount'
alias dockstorage='sudo docker info|grep "Storage Driver"'
#alias docksshinst="docker exec -i -t \"${PWD##*/}\" sh -c \"apt-get install -y ssh ; sed -i \\"s/^PermitRootLogin .*/PermitRootLogin yes/\\" /etc/ssh/sshd_config ; service ssh start\""


# dont use this i found it to be buggy
function dockmount(){
  DOCKER_AUFS_PATH="/var/lib/docker/aufs"
  DOCKER_AUFS_LAYERS="${DOCKER_AUFS_PATH}/layers/"
  DOCKER_AUFS_DIFF="${DOCKER_AUFS_PATH}/diff"
  
  BRANCH="br"
  IMAGE=`dockmid`
  TARGET="mymount"
  while read LAYER; do
          BRANCH+=":${DOCKER_AUFS_DIFF}/${LAYER}=rw"
  done < "${DOCKER_AUFS_LAYERS}/${IMAGE}"
  umount "${TARGET}"
  mount -t aufs -o "${BRANCH}" none "${TARGET}"
}
